name: Feature Branch to release/dev

on:
  push:
    branches:
      - '**'
      - '!main'
      - '!release/**'

jobs:
  merge-to-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Fetch all branches
      run: git fetch --all
        
    - name: Checkout release/dev
      run: |
        git checkout release/dev || git checkout -b release/dev origin/release/dev
        
    - name: Merge feature branch into release/dev
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        echo "Merging feature branch $BRANCH_NAME into release/dev..."
        
        git merge origin/$BRANCH_NAME --no-ff -m "chore: Auto-merge $BRANCH_NAME into release/dev\n\nContinuous integration merge for feature branch testing\nBranch: $BRANCH_NAME\nCommit: ${{ github.sha }}\nAuthor: ${{ github.actor }}\n\n[skip ci]"
        
    - name: Push to release/dev
      run: |
        git push origin release/dev
      
    - name: Create merge report
      if: always()
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        echo "## Feature to Dev Merge Report" >> $GITHUB_STEP_SUMMARY
        echo "- Source Branch: $BRANCH_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- Target: release/dev" >> $GITHUB_STEP_SUMMARY
        echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- Author: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- Time: $(date -u +%Y-%m-%d' '%H:%M:%S' UTC')" >> $GITHUB_STEP_SUMMARY
        
        if [ $? -eq 0 ]; then
          echo "- Status: Success ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your changes are now available in release/dev for testing!" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Status: Failed ❌ - Conflicts may exist" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check for merge conflicts with release/dev" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Open PR to release/dev on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const branchName = context.ref.replace('refs/heads/', '');
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          // Check if there is already an open PR from this branch to release/dev
          const { data: prs } = await github.rest.pulls.list({ owner, repo, state: 'open', base: 'release/dev' });
          const existing = prs.find(pr => pr.head && pr.head.ref === branchName);

          if (!existing) {
            const title = `Auto-PR: ${branchName} → release/dev`;
            const body = `CI could not push to release/dev (protected) or the merge conflicted.\n\nThis PR tracks the changes for review and merge.\n\n- Source: ${branchName}\n- Target: release/dev`;
            await github.rest.pulls.create({ owner, repo, head: branchName, base: 'release/dev', title, body });
          }

          await github.rest.issues.create({
            owner, repo,
            title: `Auto-merge failed: ${branchName} → release/dev`,
            body: `Automatic merge/push to release/dev failed. An auto PR has been opened or updated.\n\n- Branch: ${branchName}\n- Commit: ${context.sha}\n- Actor: ${context.actor}\n- Time: ${new Date().toISOString()}`,
            labels: ['auto-merge', 'merge-conflict', 'release/dev', 'ci']
          });