name: Feature Branch to release/dev

on:
  push:
    branches:
      - '**'
      - '!main'
      - '!release/**'

jobs:
  merge-to-dev:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Fetch all branches
      run: git fetch --all
        
    - name: Checkout release/dev
      run: |
        git checkout release/dev || git checkout -b release/dev origin/release/dev
        
    - name: Merge feature branch into release/dev
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        echo "Merging feature branch $BRANCH_NAME into release/dev..."
        
        git merge origin/$BRANCH_NAME --no-ff -m "chore: Auto-merge $BRANCH_NAME into release/dev
        
        Continuous integration merge for feature branch testing
        Branch: $BRANCH_NAME
        Commit: ${{ github.sha }}
        Author: ${{ github.actor }}
        
        [skip ci]" || echo "Merge failed - conflicts may exist"
        
    - name: Push to release/dev
      run: |
        git push origin release/dev || echo "Push failed - may have conflicts"
      
    - name: Create merge report
      if: always()
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        echo "## Feature to Dev Merge Report" >> $GITHUB_STEP_SUMMARY
        echo "- Source Branch: $BRANCH_NAME" >> $GITHUB_STEP_SUMMARY
        echo "- Target: release/dev" >> $GITHUB_STEP_SUMMARY
        echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- Author: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- Time: $(date -u +%Y-%m-%d' '%H:%M:%S' UTC')" >> $GITHUB_STEP_SUMMARY
        
        if [ $? -eq 0 ]; then
          echo "- Status: Success ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your changes are now available in release/dev for testing!" >> $GITHUB_STEP_SUMMARY
        else
          echo "- Status: Failed ❌ - Conflicts may exist" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check for merge conflicts with release/dev" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Handle merge conflicts
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const branchName = context.ref.replace('refs/heads/', '');
          
          // Only create issue for non-trivial branches
          if (branchName.includes('feature/') || branchName.includes('feat/') || 
              branchName.includes('fix/') || branchName.includes('chore/')) {
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.name,
              title: `Merge conflict: ${branchName} → release/dev`,
              body: `## Auto-merge Failed
              
              The automatic merge from ${branchName} to release/dev has failed due to conflicts.
              
              **Details:**
              - Branch: ${branchName}
              - Commit: ${context.sha}
              - Author: ${context.actor}
              - Time: ${new Date().toISOString()}
              
              **Options:**
              
              1. **Fix conflicts locally:**
              \`\`\`bash
              git checkout release/dev
              git pull origin release/dev
              git merge origin/${branchName}
              # Resolve conflicts
              git push origin release/dev
              \`\`\`
              
              2. **Rebase your branch:**
              \`\`\`bash
              git checkout ${branchName}
              git pull origin release/dev
              git rebase release/dev
              # Resolve conflicts
              git push --force-with-lease origin ${branchName}
              \`\`\`
              
              **Note:** This is for continuous integration testing. Your branch can still be merged to main via PR even if it conflicts with release/dev.
              `,
              labels: ['auto-merge', 'merge-conflict', 'release/dev', 'ci']
            });
          }