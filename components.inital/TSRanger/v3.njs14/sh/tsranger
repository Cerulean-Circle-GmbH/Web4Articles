#!/usr/bin/env bash

# v3.njs14/sh/tsranger — Backport TypeScript to ES2015 ESM for Node 14
set -euo pipefail

find_project_root() {
  local dir="$PWD"
  while [[ "$dir" != "/" ]]; do
    if [[ -f "$dir/package.json" ]]; then
      echo "$dir"
      return 0
    fi
    dir="$(dirname "$dir")"
  done
  return 1
}

PROJECT_ROOT="$(find_project_root)"
if [[ -z "${PROJECT_ROOT:-}" ]]; then
  echo "Error: Could not find project root (missing package.json)." >&2
  exit 1
fi
cd "$PROJECT_ROOT"

# Resolve tsc
if [[ -x ./node_modules/.bin/tsc ]]; then
  TSC=./node_modules/.bin/tsc
elif command -v tsc >/dev/null 2>&1; then
  TSC=$(command -v tsc)
else
  echo "TypeScript compiler not found. Install with: npm i -D typescript@4.9.5" >&2
  exit 1
fi

# Compile to ES2015 ESM
"$TSC" -p v3.njs14/tsconfig.njs14.json

# Post-process: add .js to local relative imports without extension
# Caution: simplistic; matches import/export from './x' → './x.js'
find dist.njs14 -type f -name '*.js' -print0 | while IFS= read -r -d '' f; do
  sed -i.bak -E "s/(from\s+['\"]\.\.?\/[A-Za-z0-9_\/.-]+)(['\"])/\1.js\2/g" "$f" && rm -f "$f.bak"
  sed -i.bak -E "s/(import\s*\(\s*['\"]\.\.?\/[A-Za-z0-9_\/.-]+)(['\"]\s*\))/\1.js\2/g" "$f" && rm -f "$f.bak"

done

# Choose entry
ENTRY="dist.njs14/src/ts/layer4/TSRanger.js"
if [[ "${TSRANGER_V2:-0}" == "1" && -f "dist.njs14/v2/src/ts/layer4/TSRanger.js" ]]; then
  ENTRY="dist.njs14/v2/src/ts/layer4/TSRanger.js"
fi

# Test mode
if [[ "${1:-}" == "test" ]]; then
  shift || true
  export TSRANGER_TEST_MODE=1
  export TSRANGER_TEST_INPUT="${1:-}"
fi

exec node "$ENTRY" "$@"