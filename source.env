#!/bin/bash
# Web4Articles Project Environment Configuration
# Source this file to set up the project environment from any location
# Usage: source /path/to/project/source.env

# Get the directory where this script is located (project root)
export PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Add scripts directory to PATH for easy access to all project scripts
export PATH="$PROJECT_ROOT/scripts:$PATH"

# Add node_modules/.bin to PATH for project-specific tools
export PATH="$PROJECT_ROOT/node_modules/.bin:$PATH"

# Set TypeScript project configuration
export TS_NODE_PROJECT="$PROJECT_ROOT/tsconfig.json"

# Set Node.js to use ES modules
export NODE_OPTIONS="--experimental-specifier-resolution=node"

# Set default user for Web4 components (can be overridden)
export WEB4_USER="${USER:-unknown}"
export WEB4_HOSTNAME="${HOSTNAME:-localhost}"

# Component paths for easy reference
export WEB4_COMPONENTS="$PROJECT_ROOT/components"
export WEB4_SCRIPTS="$PROJECT_ROOT/scripts"
export WEB4_DOCS="$PROJECT_ROOT/docs"
export WEB4_SCRUM="$PROJECT_ROOT/scrum.pmo"

# Function to check if environment is properly set
web4_check_env() {
    echo "Web4Articles Environment Status:"
    echo "  PROJECT_ROOT: $PROJECT_ROOT"
    echo "  Current User: $WEB4_USER@$WEB4_HOSTNAME"
    echo "  Scripts available: $(ls -1 $WEB4_SCRIPTS/*.sh 2>/dev/null | wc -l)"
    echo "  Components: $(ls -1d $WEB4_COMPONENTS/*/ 2>/dev/null | wc -l)"
    
    # Check if key scripts are accessible
    if command -v requirement.sh >/dev/null 2>&1; then
        echo "  ✅ requirement.sh is in PATH"
    else
        echo "  ❌ requirement.sh not found in PATH"
    fi
}

# Display confirmation when sourced
echo "🚀 Web4Articles environment loaded from: $PROJECT_ROOT"
echo "   Run 'web4_check_env' to verify setup"