@startuml RequirementArchitecture
!theme toy
title Web4Requirement Architecture (Current State)

package "Web4Requirement Component" <<Rectangle>> {
  package "Layer 5 - CLI" <<Cloud>> {
    class RequirementCLI {
      +handleCommand()
      +handleCreate()
      +handleDelete()
      +handleUpdate()
      +handleMove()
      +showUsage()
      +on(component, version) : fluent API
    }
  }
  
  package "Layer 3 - Interfaces" <<Cloud>> {
    interface Requirement {
      +create()
      +delete()
      +update()
      +move()
      +saveScenario()
      +loadFromScenario()
      +generateMDView()
    }
    
    interface RequirementResult {
      +success: boolean
      +message: string
      +requirementId?: string
      +deletedFiles?: string[]
    }
  }
  
  package "Layer 2 - Implementation" <<Cloud>> {
    class DefaultRequirement {
      -uuid: string
      -name: string
      -description: string
      -status: RequirementStatus
      -scenario: RequirementScenario
      -fullScenarioData: any
      -explicitComponentRoot: string
      
      +create(title, description)
      +delete(identifier)
      +saveScenario(uuid, scenario) ðŸ”¥ CORE LOGIC
      +loadFromScenario(path) ðŸ”¥ CORE LOGIC
      +generateMDView() ðŸ”¥ CORE LOGIC
      +updateOverview() ðŸ”¥ CORE LOGIC
      +on(component, version) ðŸ”¥ CONTEXT API
      +findProjectRoot() ðŸ”¥ UTILITY
      +getRequirementsDirectory() ðŸ”¥ UTILITY
      +decodeOwnerDetails() ðŸ”¥ UTILITY
    }
    
    class DefaultMDView {
      +render()
      +renderMD()
      +formatMD() ðŸ”¥ CORE LOGIC
    }
    
    class DefaultTemplateProcessor {
      +processTemplate() ðŸ”¥ CORE LOGIC
      +loadTemplate() ðŸ”¥ CORE LOGIC
    }
  }
  
  package "Storage Dependencies" <<Rectangle>> {
    class UnitIndexStorage {
      +saveScenario() ðŸ”¥ CENTRAL STORAGE
      +loadScenario() ðŸ”¥ CENTRAL STORAGE
    }
    
    class DefaultUser {
      +getOwnerObject() ðŸ”¥ OWNER MANAGEMENT
    }
  }
}

' Dependencies
DefaultRequirement --> UnitIndexStorage : uses
DefaultRequirement --> DefaultUser : uses
DefaultRequirement --> DefaultMDView : uses
DefaultMDView --> DefaultTemplateProcessor : uses
RequirementCLI --> DefaultRequirement : uses

' Core functionality indicators
note top of DefaultRequirement : ðŸ”¥ MATURE IMPLEMENTATION\nExtensive functionality:\n- Component context API\n- Delete command\n- Owner details decoding\n- Multi-format handling
note right of DefaultMDView : ðŸ”¥ VIEW SYSTEM\nTemplate-based MD generation\nwith owner detail integration
note bottom of UnitIndexStorage : ðŸ”¥ CENTRAL STORAGE\nUUID-based scenario indexing\nwith symlink management

@enduml
