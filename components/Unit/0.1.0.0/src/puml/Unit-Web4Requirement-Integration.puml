@startuml Unit-Web4Requirement-Integration
!theme plain
skinparam backgroundColor White
skinparam defaultFontName "Segoe UI"
skinparam defaultFontSize 10

title Unit UUID Index Storage ↔ Web4Requirement Integration Architecture

package "Central UUID Index Storage" as storage {
  storage "scenarios/index/" as central_index {
    folder "1/a/1/2/3/" as uuid_folder {
      file "uuid.scenario.json" as master_scenario
    }
    note right of master_scenario
      **Master Scenario Storage**
      - Single source of truth
      - UUID-based folder structure
      - Complete backlink tracking
      - Lifecycle management
    end note
  }
}

package "Unit Component v1.0" as unit_comp {
  [UnitIndexStorage] as unit_storage
  [DefaultUnit] as unit_impl
  [Unit CLI] as unit_cli
  
  note right of unit_storage
    **UUID Index Operations:**
    - saveScenario(uuid, scenario, symlinks)
    - loadScenario(uuid)
    - addSymbolicLink(uuid, path)
    - moveScenario(uuid, newLocations)
    - getBacklinkInfo(uuid)
  end note
}

package "Web4Requirement Component v1.1" as req_comp {
  [DefaultRequirement] as req_impl
  [RequirementCLI] as req_cli
  [RequirementOverview] as req_overview
  
  folder "spec/requirements/" as req_specs {
    file "uuid.scenario.json" as req_symlink
  }
  
  folder "spec/requirements.md/" as req_md {
    file "uuid.requirement.md" as req_view
    file "00_requirements.overview.md" as req_overview_file
  }
}

package "Other Components" as other_comps {
  [ComponentA] as comp_a
  [ComponentB] as comp_b
  
  folder "ComponentA/spec/" as comp_a_spec {
    file "uuid.scenario.json" as comp_a_symlink
  }
}

' Storage relationships
unit_storage --> master_scenario : "Manages master storage"
master_scenario --> req_symlink : "Symbolic link"
master_scenario --> comp_a_symlink : "Symbolic link"

' Integration flow
req_impl --> unit_storage : "Uses for scenario operations"
req_cli --> unit_storage : "Delegates storage to Unit"
comp_a --> unit_storage : "Uses shared storage"

' Current Web4Requirement flow (before integration)
req_impl ..> req_specs : "Current: Direct file operations"
req_impl --> req_md : "Generates MD views"
req_overview --> req_overview_file : "Generates overview"

' Proposed integration flow
req_impl --> unit_storage : "**NEW: Use Unit storage**"
unit_storage --> req_symlink : "Creates/manages symlinks"

note as integration_note
**Integration Benefits:**
✅ **Unified Storage**: All components use same UUID index
✅ **Automatic Backlinks**: Unit tracks all references
✅ **Lifecycle Management**: Move/delete updates all symlinks
✅ **Terminal Identification**: UUIDs beyond filenames
✅ **No Duplication**: Single source of truth per scenario
end note

note as orchestration_flow
**Orchestration Flow:**
1. **Web4Requirement.create()** → **Unit.saveScenario()**
2. **Unit** stores in central index with backlink tracking
3. **Unit** creates symbolic link in Web4Requirement spec/
4. **Web4Requirement** generates MD view from symlinked scenario
5. **Any component** can reference same scenario via Unit storage
end note

@enduml
