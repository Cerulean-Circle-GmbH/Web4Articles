@startuml UnitArchitecture
!theme plain
skinparam backgroundColor White
skinparam defaultFontName "Segoe UI"
skinparam defaultFontSize 10

title Web4 Unit Component Architecture - 5 Layer Model

package "Layer 5: User Experience" as layer5 {
  [Unit Inspector] as UI1
  [Unit Coordinator] as UI2
  [Unit Developer Tools] as UI3
}

package "Layer 4: Business Process Orchestration" as layer4 {
  [Unit Workflow Engine] as BP1
  [Unit Process Coordinator] as BP2
  [Unit Transaction Manager] as BP3
}

package "Layer 3: Interface/Service Contracts" as layer3 {
  interface "Unit" as IUnit
  interface "UnitScenario" as IUnitScenario
  interface "UnitCapability" as IUnitCapability
  interface "CoordinationResult" as ICoordResult
}

package "Layer 2: Implementation" as layer2 {
  [DefaultUnit] as Impl1
  [UnitExecutor] as Impl2
  [UnitCoordinator] as Impl3
  [ScenarioManager] as Impl4
}

package "Layer 1: Infrastructure" as layer1 {
  [Unit Registry] as Infra1
  [Network Communication] as Infra2
  [IOR Resolution] as Infra3
  [Evidence Storage] as Infra4
}

' Layer dependencies (downward)
UI1 --> BP1
UI2 --> BP2
UI3 --> BP3

BP1 --> IUnit
BP2 --> IUnitScenario
BP3 --> IUnitCapability

IUnit --> Impl1
IUnitScenario --> Impl2
IUnitCapability --> Impl3
ICoordResult --> Impl4

Impl1 --> Infra1
Impl2 --> Infra2
Impl3 --> Infra3
Impl4 --> Infra4

' Web4 Patterns
note right of IUnit
  **Web4 Patterns:**
  - Empty constructor()
  - init(scenario: UnitScenario)
  - toScenario(): UnitScenario
  - IOR-based references
  - Evidence-based execution
end note

note right of Impl1
  **DefaultUnit Implementation:**
  - Pure Web4 compliance
  - Scenario hibernation/restoration
  - IOR-based coordination
  - Complete execution traceability
  - Business logic abstraction
end note

' External dependencies
cloud "Web4 Ecosystem" as ecosystem {
  [IOR System] as IOR
  [Scenario Management] as Scenario
  [ONCE Kernel] as ONCE
}

Impl3 --> IOR
Impl4 --> Scenario
Infra2 --> ONCE

@enduml
