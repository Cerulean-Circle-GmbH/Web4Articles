#!/bin/bash

# Web4 P2PServer Component Shell Starter
# Checks environment, builds dependencies, delegates to CLI
# Following standardized Web4 component pattern

set -euo pipefail

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
COMPONENT_DIR="$SCRIPT_DIR"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo "🌐 Web4 P2PServer Component v0.3.0.0 - P2P Server Capability"
echo "📂 Component: $COMPONENT_DIR"

# Use Build component for comprehensive build chain
use_build_component() {
    local BUILD_COMPONENT="$COMPONENT_DIR/../../Build/latest"
    
    if [ -x "$BUILD_COMPONENT/build" ]; then
        echo "🏗️ Triggering comprehensive build chain for P2PServer..."
        
        # Trigger complete build chain for P2PServer component
        "$BUILD_COMPONENT/build" buildComponent P2PServer || {
            echo -e "${RED}❌ Comprehensive build chain failed for P2PServer${NC}"
            exit 1
        }
        
        echo -e "${GREEN}✅ Build chain complete - P2PServer ready for execution${NC}"
    else
        echo -e "${YELLOW}⚠️ Build component not available, using enhanced fallback...${NC}"
        enhanced_fallback_build
    fi
}

# Enhanced fallback build with dependency detection
enhanced_fallback_build() {
    echo "🔍 Detecting P2PServer component dependencies..."
    
    # Basic environment check
    command -v node >/dev/null 2>&1 || {
        echo -e "${RED}❌ Node.js required but not installed${NC}"
        exit 1
    }
    
    command -v npm >/dev/null 2>&1 || {
        echo -e "${RED}❌ NPM required but not installed${NC}"
        exit 1
    }
    
    # Build P2PServer component
    if [ -f "$COMPONENT_DIR/package.json" ]; then
        echo "🔧 Building P2PServer component..."
        cd "$COMPONENT_DIR"
        npm install >/dev/null 2>&1
        npm run build >/dev/null 2>&1 || npx tsc >/dev/null 2>&1
        echo -e "${GREEN}✅ P2PServer built${NC}"
    fi
    
    echo -e "${GREEN}✅ Enhanced fallback build complete${NC}"
}

# Main execution
main() {
    # Check if this is a usage request (no arguments)
    if [ $# -eq 0 ]; then
        echo "🔍 Setting up P2PServer environment..."
        use_build_component
        echo "🚀 Delegating to P2PServer CLI..."
        
        # Show usage if no arguments
        if [ -f "$COMPONENT_DIR/dist/ts/layer5/P2PServerCLI.js" ]; then
            node "$COMPONENT_DIR/dist/ts/layer5/P2PServerCLI.js"
        else
            echo -e "${RED}❌ P2PServer CLI not found. Build may have failed.${NC}"
            echo "Try running: npm run build"
            exit 1
        fi
    else
        echo "🔍 Setting up P2PServer environment..."
        use_build_component
        echo "🚀 Delegating to P2PServer CLI..."
        
        # Execute with arguments
        if [ -f "$COMPONENT_DIR/dist/ts/layer5/P2PServerCLI.js" ]; then
            node "$COMPONENT_DIR/dist/ts/layer5/P2PServerCLI.js" "$@"
        else
            echo -e "${RED}❌ P2PServer CLI not found. Build may have failed.${NC}"
            echo "Try running: npm run build"
            exit 1
        fi
    fi
}

# Execute with all arguments
main "$@"