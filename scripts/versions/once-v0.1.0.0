#!/bin/bash
# ONCE CLI Tool v0.1.0.0 - Location Resilient Launcher  
# Follows Web4 CLI pattern - delegates to TypeScript CLI
# Generated by setup-once-links.sh

find_project_root() {
    local current_dir="$PWD"
    local git_root=$(git rev-parse --show-toplevel 2>/dev/null)
    if [ -n "$git_root" ]; then
        echo "$git_root"
        return 0
    fi
    
    local dir="$current_dir"
    while [ "$dir" != "/" ]; do
        if [ -f "$dir/package.json" ]; then
            echo "$dir"
            return 0
        fi
        dir=$(dirname "$dir")
    done
    
    echo "$current_dir"
}

PROJECT_ROOT=$(find_project_root)
if [ -z "$PROJECT_ROOT" ]; then
    echo "‚ùå Error: Not in a Web4Articles project directory"
    exit 1
fi

export PROJECT_ROOT

# Find the CLI in the components directory structure
ONCE_VERSION="0.1.0.0"
COMPONENT_DIR="$PROJECT_ROOT/components/ONCE/$ONCE_VERSION"
CLI_SOURCE_PATH="$COMPONENT_DIR/src/ts/layer5/OnceCLI.ts"
CLI_PATH="$COMPONENT_DIR/dist/ts/layer5/OnceCLI.js"

# Check if compiled CLI exists, if not try to build
if [ ! -f "$CLI_PATH" ]; then
    if [ ! -f "$CLI_SOURCE_PATH" ]; then
        echo "‚ùå CLI source not found at: $CLI_SOURCE_PATH"
        echo "üìÅ Component directory: $COMPONENT_DIR"
        exit 1
    fi
    
    echo "üî® Building ONCE CLI v$ONCE_VERSION..."
    cd "$COMPONENT_DIR"
    
    # Install dependencies if needed
    if [ ! -d "node_modules" ]; then
        npm install
    fi
    
    # Build the project
    if ! npm run build; then
        echo "‚ùå Build failed for ONCE v$ONCE_VERSION"
        exit 1
    fi
    
    if [ ! -f "$CLI_PATH" ]; then
        echo "‚ùå CLI still not found at: $CLI_PATH after build"
        exit 1
    fi
fi

# Check for Node.js
if ! command -v node >/dev/null 2>&1; then
    echo "‚ùå Error: Node.js is required but not installed"
    exit 1
fi

# Execute the TypeScript CLI with all arguments
cd "$PROJECT_ROOT"
node "$CLI_PATH" "$@"

# All above logic handles the TypeScript CLI execution
