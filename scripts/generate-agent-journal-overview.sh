#!/bin/bash
# Generate agent-specific journal overview
# Each agent gets their own overview showing only their sessions

set -euo pipefail

# Get script directory and project root
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
JOURNAL_DIR="$PROJECT_ROOT/scrum.pmo/project.journal"

# Get current branch and determine agent
CURRENT_BRANCH=$(git branch --show-current)
AGENT_NAME=""
AGENT_ROLE=""

# Determine agent based on branch
case "$CURRENT_BRANCH" in
    "release/dev")
        echo "⚠️  THE ScrumMaster works on the MAIN project.journal.overview.md"
        echo "   Other agents use branch-specific overviews."
        echo "   Run: ./scripts/update-journal-overview.sh instead"
        exit 0
        ;;
    "feature/recovery-agent")
        AGENT_NAME="Recovery Agent"
        AGENT_ROLE="Recovery"
        ;;
    "feature/ontology-agent")
        AGENT_NAME="Ontology Agent"
        AGENT_ROLE="Ontology"
        ;;
    "feature/research-agent")
        AGENT_NAME="Research Agent"
        AGENT_ROLE="Research"
        ;;
    "feature/branchStatusAgent")
        AGENT_NAME="Branch Status Agent"
        AGENT_ROLE="Monitor"
        ;;
    "feature/qa-validation")
        AGENT_NAME="QA Agent"
        AGENT_ROLE="QA"
        ;;
    *)
        AGENT_NAME="Unknown Agent"
        AGENT_ROLE="Unknown"
        ;;
esac

# Create agent-specific overview file
OVERVIEW_FILE="$JOURNAL_DIR/project.journal.overview.${CURRENT_BRANCH//\//-}.md"

# Generate header
cat > "$OVERVIEW_FILE" << EOF
[Back to SCRUM PMO](../index.md)

# Project Journal Overview - $AGENT_NAME

**Generated**: $(date -u +"%Y-%m-%d %H:%M UTC")  
**Agent**: $AGENT_NAME  
**Branch**: $CURRENT_BRANCH  
**Role**: $AGENT_ROLE

---

## ⚠️ IMPORTANT NOTICE ⚠️

This is the journal overview for **$AGENT_NAME** on branch **$CURRENT_BRANCH**.

Each agent has their own journal overview showing only their sessions.
You should ONLY work in sessions where you are the documented agent.

---

## Your Active Sessions

EOF

# Find sessions for this agent/branch
FOUND_SESSIONS=0

# Look through all sessions
for session_dir in $(ls -1r "$JOURNAL_DIR" | grep -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]{4}'); do
    session_path="$JOURNAL_DIR/$session_dir"
    
    if [ -f "$session_path/project.state.md" ]; then
        # Check if this session belongs to current agent
        session_branch=$(grep -E "^\- \*\*Branch\*\*:" "$session_path/project.state.md" 2>/dev/null | head -1 | sed 's/.*Branch\*\*: *//' | sed 's/ *(.*)//' | tr -d '\n' || echo "")
        session_role=$(grep -E "^\- \*\*Role\*\*:" "$session_path/project.state.md" 2>/dev/null | head -1 | sed 's/.*Role\*\*: *//' | tr -d '\n' || echo "")
        
        # Check if this session matches agent's branch or role
        if [[ "$session_branch" == *"$CURRENT_BRANCH"* ]] || [[ "$session_role" == *"$AGENT_ROLE"* ]]; then
            FOUND_SESSIONS=$((FOUND_SESSIONS + 1))
            
            echo "### $session_dir" >> "$OVERVIEW_FILE"
            echo "- **Branch**: $session_branch" >> "$OVERVIEW_FILE"
            echo "- **Role**: $session_role" >> "$OVERVIEW_FILE"
            echo "- **Session**: [GitHub](https://github.com/Cerulean-Circle-GmbH/Web4Articles/blob/$CURRENT_BRANCH/scrum.pmo/project.journal/$session_dir/project.state.md) [./project.journal/$session_dir/project.state.md](./project.journal/$session_dir/project.state.md)" >> "$OVERVIEW_FILE"
            
            # Count PDCAs
            if [ -d "$session_path/pdca" ]; then
                pdca_count=$(find "$session_path/pdca" -name "*.md" | wc -l | tr -d ' ')
                echo "- **PDCA Entries**: $pdca_count" >> "$OVERVIEW_FILE"
            fi
            
            echo "" >> "$OVERVIEW_FILE"
        fi
    fi
done

# If no sessions found
if [ $FOUND_SESSIONS -eq 0 ]; then
    echo "**No sessions found for your agent/branch.**" >> "$OVERVIEW_FILE"
    echo "" >> "$OVERVIEW_FILE"
    echo "This means you should:" >> "$OVERVIEW_FILE"
    echo "1. Create a new session for your work" >> "$OVERVIEW_FILE"
    echo "2. Ensure your branch is set correctly: $CURRENT_BRANCH" >> "$OVERVIEW_FILE"
    echo "3. Set your role appropriately: $AGENT_ROLE" >> "$OVERVIEW_FILE"
fi

# Add footer
cat >> "$OVERVIEW_FILE" << EOF

---

## Branch Assignment Reminder

You are **$AGENT_NAME** on branch **$CURRENT_BRANCH**.

Remember: One Agent = One Branch = One Context

If you see sessions from other branches here, DO NOT WORK IN THEM.
Create your own sessions on your assigned branch.

---

Generated by agent-specific journal overview
EOF

echo "✅ Agent journal overview generated: $OVERVIEW_FILE"
echo "📊 Found $FOUND_SESSIONS sessions for $AGENT_NAME"