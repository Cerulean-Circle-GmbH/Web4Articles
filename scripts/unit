#!/bin/bash

# Unit CLI Tool - Auto-Build Standard Compliant
# Web4 pattern: Component shell wrapper with auto-build

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
COMPONENT_VERSION="0.3.0.4"
COMPONENT_PATH="$PROJECT_ROOT/components/Unit/$COMPONENT_VERSION"
CLI_PATH="$COMPONENT_PATH/dist/ts/layer5/UnitCLI.js"

# Check if component exists
if [ ! -d "$COMPONENT_PATH" ]; then
    echo "‚ùå Unit $COMPONENT_VERSION not found at $COMPONENT_PATH"
    exit 1
fi

# Function to check if rebuild is needed
needs_rebuild() {
    # If CLI doesn't exist, rebuild needed
    [ ! -f "$CLI_PATH" ] && return 0
    
    # Check if any TypeScript file in src is newer than CLI
    find "$COMPONENT_PATH/src" -name "*.ts" -newer "$CLI_PATH" 2>/dev/null | grep -q . && return 0
    
    return 1
}

# Auto-build if CLI not available or source is newer
if needs_rebuild; then
    echo "üîß Building Unit $COMPONENT_VERSION (source files updated)..."
    cd "$COMPONENT_PATH"
    npm install --silent 2>/dev/null || true
    npm run build --silent
    cd "$PROJECT_ROOT"
fi

# Check if CLI is now available
if [ ! -f "$CLI_PATH" ]; then
    echo "‚ùå Unit CLI build failed"
    exit 1
fi

# Execute CLI with all arguments
node "$CLI_PATH" "$@"